// Automatically generated by flapigen
package org.iota.client;

/**
 * `TreasuryInput` is an input which references a milestone which generated a `TreasuryOutput`.
 */
public final class TreasuryInput {
    @Override
    public String toString() {{
        return this.to_string();
    }}

    public boolean equals(Object obj) {
        boolean equal = false;
        if (obj instanceof TreasuryInput)
        equal = ((TreasuryInput)obj).rustEq(this);
        return equal;
    }

    public int hashCode() {
        return (int)mNativeObj;
    }

    /**
     * Create a new TreasuryInput
     * @param id The MilestoneId which Generated a `TreasuryOutput`
     */
    public TreasuryInput(MilestoneId id) {
        long a0 = id.mNativeObj;
        id.mNativeObj = 0;

        mNativeObj = init(a0);
        JNIReachabilityFence.reachabilityFence1(id);
    }
    private static native long init(long id);

    private final String to_string() {
        String ret = do_to_string(mNativeObj);

        return ret;
    }
    private static native String do_to_string(long self);

    private final boolean rustEq(TreasuryInput o) {
        long a0 = o.mNativeObj;
        boolean ret = do_rustEq(mNativeObj, a0);

        JNIReachabilityFence.reachabilityFence1(o);

        return ret;
    }
    private static native boolean do_rustEq(long self, long o);
    /**
     * Returns the milestones id of a `TreasuryInput`.
     */
    public final MilestoneId milestoneId() {
        long ret = do_milestoneId(mNativeObj);
        MilestoneId convRet = new MilestoneId(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_milestoneId(long self);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ TreasuryInput(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}