// Automatically generated by flapigen
package org.iota.client;


public final class Signature {
    @Override
    public String toString() {{
        return this.to_string();
    }}


    private Signature() {}

    private final String to_string() {
        String ret = do_to_string(mNativeObj);

        return ret;
    }
    private static native String do_to_string(long self);
    /**
     * Turn the signature into bytes
     */
    public final byte [] toBytes() {
        byte [] ret = do_toBytes(mNativeObj);

        return ret;
    }
    private static native byte [] do_toBytes(long self);
    /**
     * Turns bytes into a signature
     */
    public static Signature fromBytes(byte [] bs) {
        long ret = do_fromBytes(bs);
        Signature convRet = new Signature(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_fromBytes(byte [] bs);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ Signature(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}