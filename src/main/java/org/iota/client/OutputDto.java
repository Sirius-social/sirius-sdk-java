// Automatically generated by flapigen
package org.iota.client;

/**
 * Wrapper for different output types
 */
public final class OutputDto {
    @Override
    public String toString() {{
        return this.to_string();
    }}


    private OutputDto() {}

    private final String to_string() {
        String ret = do_to_string(mNativeObj);

        return ret;
    }
    private static native String do_to_string(long self);

    public final OutputKind kind() {
        int ret = do_kind(mNativeObj);
        OutputKind convRet = OutputKind.fromInt(ret);

        return convRet;
    }
    private static native int do_kind(long self);

    public final SignatureLockedSingleOutputDto asSignatureLockedSingleOutputDto() {
        long ret = do_asSignatureLockedSingleOutputDto(mNativeObj);
        SignatureLockedSingleOutputDto convRet = new SignatureLockedSingleOutputDto(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_asSignatureLockedSingleOutputDto(long self);

    public final SignatureLockedDustAllowanceOutputDto asSignatureLockedDustAllowanceOutputDto() {
        long ret = do_asSignatureLockedDustAllowanceOutputDto(mNativeObj);
        SignatureLockedDustAllowanceOutputDto convRet = new SignatureLockedDustAllowanceOutputDto(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_asSignatureLockedDustAllowanceOutputDto(long self);

    public final TreasuryOutputDto asTreasuryOutput() {
        long ret = do_asTreasuryOutput(mNativeObj);
        TreasuryOutputDto convRet = new TreasuryOutputDto(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_asTreasuryOutput(long self);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ OutputDto(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}